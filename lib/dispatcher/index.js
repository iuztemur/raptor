var EventEmitter = require('events').EventEmitter;
var util = require('util');
var Device = require('../device');
var Adb = require('../adb');

/**
 * Create an entity that can wire up event listeners to ADB log parsers
 * @constructor
 */
var Dispatcher = function() {
  EventEmitter.call(this);

  this.parsers = [];
  this.adb = new Adb();
};

util.inherits(Dispatcher, EventEmitter);

/**
 * Register a parser to be able to handle incoming log messages
 * @param {function} parser Function generated by a parser factory. This
 *                   function will be passed the log entry object and a
 *                   reference to the dispatcher to broadcast parsed messages on
 */
Dispatcher.prototype.registerParser = function(parser) {
  var dispatcher = this;

  // Saving a collection of parsers in case we want to allow unregistering
  // parsers in the future
  this.parsers.push(parser);
  this.adb.stream.on('entry', function(entry) {
    parser(entry, dispatcher);
  })
};

/**
 * Stop the log stream and remove any parser listeners
 */
Dispatcher.prototype.end = function() {
  this.adb.end();
  this.removeAllListeners();
};

module.exports = Dispatcher;